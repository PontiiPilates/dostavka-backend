<?php

declare(strict_types=1);

namespace App\UseCases\TK;

use App\Enums\DPD\DpdUrlType;
use Illuminate\Http\Request;
use SoapClient;

class DpdCase extends BaseCase
{
    private string $uri;
    private string $clientNumber;
    private string $clientKey;

    public function __construct()
    {
        $this->uri = config('companies.dpd.uri');
        $this->clientNumber = config('companies.dpd.client_number');
        $this->clientKey = config('companies.dpd.client_key');
    }

    public function handle(Request $request)
    {
        // todo: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–º–æ–∂–Ω–æ –ª—É—á—à–µ –æ–±–µ—Ä–Ω—É—Ç—å –≤ –º–µ—Ç–æ–¥ prepare, –∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
        $selectedFrom = $this->findcity($request->from);
        $selectedTo = $this->findCity($request->to);
        $selectedRegimes = $request->regimes;
        $selectedPlaces = $request->places;
        $selectedSumoc = $request->sumoc;
        $selectedSumnp = $request->sumnp;
        $selectedShipmentDate = $request->shipment_date;
        $selectedInternationals = $this->isInternational($request->to);

        // —Ä–µ–∂–∏–º —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ª–æ–≥–∏–∫—É
        foreach ($selectedRegimes as $regime) {

            $regimeSwitchers = $this->regimeSwitchers($regime);

            // todo: –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –≤ –º–µ—Ç–æ–¥ build Dto –∏ —Å–æ–±–∏—Ä–∞—Ç—å –≤ –Ω–µ–º DTO
            $dto['request'] = [
                'declaredValue' => $selectedSumoc, // –æ–±—ä—è–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å (–∏—Ç–æ–≥–æ–≤–∞—è)
                'parcel' => $selectedPlaces,
                'pickup' => [
                    'cityId' => $selectedFrom->cityId, // –æ—Ç–∫—É–¥–∞
                    'cityName' => $selectedFrom->cityName, // –æ—Ç–∫—É–¥–∞
                ],
                'delivery' => [
                    'cityId' => $selectedTo->cityId, // –∫—É–¥–∞
                    'cityName' => $selectedTo->cityName, // –∫—É–¥–∞
                ],
                'pickupDate' => $selectedShipmentDate, // –¥–∞—Ç–∞ —Å–¥–∞—á–∏ –≥—Ä—É–∑–∞
                'selfPickup' => $regimeSwitchers['selfPickup'],
                'selfDelivery' => $regimeSwitchers['selfDelivery'],
                'auth' => [
                    'clientNumber' => $this->clientNumber,
                    'clientKey' => $this->clientKey,
                ]
            ];
        }

        dd($dto);

        $this->calculate($dto);
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–µ–∂–∏–º–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏.
     * 
     * selfPickup: true - –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –¥–æ–≤–æ–∑–∏—Ç –¥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ / false - –∫—É—Ä—å–µ—Ä –∑–∞–±–∏—Ä–∞–µ—Ç —É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
     * selfDelivery: true - –ø–æ–ª—É—á–∞—Ç–µ–ª—å –∑–∞–±–∏—Ä–∞–µ—Ç —Å–∞–º / false - –∫—É—Ä—å–µ—Ä –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—é
     */
    private function regimeSwitchers($selectedRegime): array
    {
        switch ($selectedRegime) {
            case 'ss': // (—Å–∫–ª–∞–¥-—Å–∫–ª–∞–¥)
                return [
                    'selfPickup' => true,
                    'selfDelivery' => true,
                ];
            case 'sd': // (—Å–∫–ª–∞–¥-–¥–≤–µ—Ä—å)
                return [
                    'selfPickup' => true,
                    'selfDelivery' => false,
                ];
            case 'ds': // (–¥–≤–µ—Ä—å-—Å–∫–ª–∞–¥)
                return [
                    'selfPickup' => false,
                    'selfDelivery' => true,
                ];
            default: // dd (–¥–≤–µ—Ä—å-–¥–≤–µ—Ä—å)
                return [
                    'selfPickup' => false,
                    'selfDelivery' => false,
                ];
        }
    }

    // {
    //   +"cityId": 48951627
    //   +"countryCode": "RU"
    //   +"countryName": "–†–æ—Å—Å–∏—è"
    //   +"regionCode": 42
    //   +"regionName": "–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å - –ö—É–∑–±–∞—Å—Å"
    //   +"cityCode": "42000009000"
    //   +"cityName": "–ö–µ–º–µ—Ä–æ–≤–æ"
    //   +"abbreviation": "–≥"
    //   +"indexMin": "650000"
    //   +"indexMax": "650992"
    // }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤.
     */
    private function cityes(): object
    {
        $parameters['request'] = [
            'auth' => [
                'clientNumber' => $this->clientNumber,
                'clientKey' => $this->clientKey,
            ]
        ];

        // todo: –æ–±–µ—Ä–Ω—É—Ç—å –≤ send-–º–µ—Ç–æ–¥ –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ BaseCase
        $client = new SoapClient($this->uri . DpdUrlType::Geography->value); // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        $cityes = $client->getCitiesCashPay($parameters); // –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞

        return $cityes;
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
     */
    private function findCity($needle): object|null
    {
        $cityes = $this->cityes();

        foreach ($cityes->return as $item) {
            if ($item->cityName == $needle) {
                return $item;
            }
        }

        return null;
    }

    /**
     * –†–∞—Å—á—ë—Ç –¥–æ—Å—Ç–∞–≤–∫–∏.
     */
    private function calculate($dto)
    {
        // todo: –æ–±–µ—Ä–Ω—É—Ç—å –≤ send-–º–µ—Ç–æ–¥ –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ BaseCase
        $client = new SoapClient($uri = $this->uri . DpdUrlType::Calculator->value); // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è SOAP
        $response = $client->getServiceCostByParcels2($dto); // –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞

        dd($response);
    }













    /**
     * –ü—Ä–∏–º–µ—Ä—ã –∏–∑ —Å—Ç—Ä—ë–º–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ üôà
     */
    public function access()
    {

        $MY_NUMBER     = '1204000542';
        $MY_KEY        = '632B142BD21B8A341D9252CCF40A89B98B0E2990';

        $server = array(
            0 => 'http://ws.dpd.ru/services/', //–æ–±—ã—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
            1 => 'http://wstest.dpd.ru/services/' //—Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
        );
    }


    /**
     * –ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∏—Å–∫ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã –æ–ø–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–∞–ª—å—à–µ.
     */
    public function findCityy($idcity)
    { //–¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ –ø–æ–∏—Å–∫—É –∫–ª—é—á–∞ –≥–æ—Ä–æ–¥–∞ –≤ DPD –ø–µ—Ä–µ–¥–∞–≤–∞—è –≥–æ—Ä–æ–¥. (–ü—Ä–∏–º–µ—Ä - –ö–∞–ª—É–≥–∞)
        include "setings.php";
        $client = new SoapClient("$server[0]geography2?wsdl");

        $arData['auth'] = array(
            'clientNumber' => $MY_NUMBER,
            'clientKey' => $MY_KEY
        );
        $arRequest['request'] = $arData; //–ø–æ–º–µ—â–∞–µ–º –Ω–∞—à –º–∞—Å–∏–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –º–∞—Å–∏–≤ –∑–∞–ø—Ä–æ—Å–∞ request.
        $ret = $client->getCitiesCashPay($arRequest); //–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Ñ—É–Ω–∫—Ü–∏–∏ getCitiesCashPay  –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤.

        function stdToArray($obj)
        {
            $rc = (array)$obj;
            foreach ($rc as $key => $item) {
                $rc[$key] = (array)$item;
                foreach ($rc[$key] as $keys => $items) {
                    $rc[$key][$keys] = (array)$items;
                }
            }
            return $rc;
        }
        //—Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ –º–∞—Å–∏–≤


        $mass = stdToArray($ret); //–≤—ã–∑—ã–≤–∞–µ–º —ç—Ç—É —Å–∞–º—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–µ—Ä–µ–±—Ä–∞—Ç—å –º–∞—Å–∏–≤

        foreach ($mass as $key => $key1) {
            foreach ($key1 as $cityid => $city) {
                if (in_array($idcity, $city)) {
                    $id = $city['cityId'];
                    return $id;
                } // –µ—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ –≤ –º–∞—Å–∏–≤–µ (–∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–∫–∞–ª–∏) –º—ã –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é $ID –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—à –æ—Ç–≤–µ—Ç.
            }
        }
    }

    public function getFindCity()
    {
        // –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞
        $city = '–ö–∞–ª—É–≥–∞';
        $findcity = $this->findCityy($city); //—Ç–∞–∫ –º—ã –∑–∞–ø–∏—à–µ–º –Ω–æ–º–µ—Ä –≥–æ—Ä–æ–¥–∞ –∏–∑ DPD –≤ –Ω–∞—à—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.
    }



    /**
     * –ü—Ä–∏–º–µ—Ä –∏–∑ —Å—Ç—Ä—ë–º–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ üôà
     */
    public function streamScenarie()
    {
        $city = '–ö–∞–ª—É–≥–∞';
        $findcity = $this->findCityy($city);
        $sposob = 'home';
        // –ú–∞—Å—Å–∏–≤ tovars 
        $a[] = array(
            0 => '—Ç—É—Ç id',
            1 => '—Ç—É—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞'
        ); // –∏ —Ç–∞–∫ –º–æ–∂–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –¥–æ —Å–∫–æ–ª—å–∫–∏—Ö –≤–∞–º –Ω—É–∂–Ω–æ. –ò–ª–∏ –∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AJAX
        $tovars = $_POST['tovars']; //–ø—Ä–∏–Ω–∏–º–∞–µ–º –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤
        $spec = $_POST['tovars'];
        for ($g = 0; $g <= count($tovars) - 1; $g++) { //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å–∏–≤(–º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ foreach)
            $all[] = $tovars[$g][0]; //id —Ç–æ–≤–∞—Ä–∞
            $cout[] = $tovars[$g][1]; //–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
        }

        sort($cout); // —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 
        $tovar = array_unique($all); //—É–¥–∞–ª—è–µ–º —Ç–æ—Ç —Ç–æ–≤–∞—Ä –∫–æ—Ç–æ—Ä—ã–π –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—å—Å—è
        $tovar = implode(",", $tovar); // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —á–µ—Ä–µ–∑ ‚Äò,‚Äô 

        // $mysql_query = mysql_query("SELECT * FROM items WHERE id IN ($tovar)"); //—Ç–∞–±–ª–∏—Ü–∞ items –∏–º–µ–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É id(—Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–∫–∞–ª–∏),name(–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞),mesto(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç),width,height,weight,length,price
        // $mysql_array = mysql_fetch_assoc($mysql_query);
        $mysql_array = [];

        $server = array(
            0 => 'http://ws.dpd.ru/services/', //–æ–±—ã—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
            1 => 'http://wstest.dpd.ru/services/' //—Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
        );


        $client = new SoapClient("$server[0]calculator2?wsdl"); //—Å–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ soap
        $arData = array(
            'delivery' => array(            // –≥–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏
                'cityId' => $findcity, //id –≥–æ—Ä–æ–¥–∞
                'cityName' => $city, //—Å–∞–º –≥–æ—Ä–æ–¥
            ),
        );
        $arData['auth'] = array(
            'clientNumber' => '1204000542',
            'clientKey' => '632B142BD21B8A341D9252CCF40A89B98B0E2990',
        ); //–¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if ($sposob == 'home') { //–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ –¥–æ–º–∞ —Ç–æ —Å—Ç–∞–≤–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ false
            $arData['selfDelivery'] = false; // –î–æ—Å—Ç–∞–≤–∫–∞ –î–û –¥–æ–º–∞
        } else { // –µ—Å–ª–∏ –∂–µ –º—ã —Ö–æ—Ç–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ —Ç–æ true
            $arData['selfDelivery'] = true; // –î–æ—Å—Ç–∞–≤–∫–∞ –î–û —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
        }
        $arData['pickup'] = array(
            'cityId' => 195733465,
            'cityName' => '–ö–∞–ª—É–≥–∞',
        ); // –≥–¥–µ –∑–∞–±–∏—Ä–∞—é—Ç —Ç–æ–≤–∞—Ä

        // —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–º
        $arData['selfPickup'] = true; // –î–æ—Å—Ç–∞–≤–∫–∞ –û–¢ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ // –µ—Å–ª–∏ –≤—ã —Å–∞–º–∏ –¥–æ–≤–æ–∑–∏—Ç–µ –¥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ —Ç–æ true –µ—Å–ª–∏ –≤—ã –æ—Ç–¥–∞—ë—Ç–µ –æ—Ç –¥–≤–µ—Ä–∏ —Ç–æ false
        $i = 0;
        do { //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–∞–ø—Ä–æ—Å–∞ –≤ –ë–î 
            if ($mysql_array['mesto'] > 1) { //–µ—Å–ª–∏ –º–µ—Å—Ç –±–æ–ª—å—à–µ —á–µ–º 1
                $ves = explode(",", $mysql_array["weight"]); //–≤ –±–¥ –≤—Å—ë —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ–º —Å—Ç–æ–ª–±–∏–∫–µ –Ω–æ —á–µ—Ä–µ–∑ ‚Äò,‚Äô –¥–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–∞–Ω–¥—É explode(–≥–¥–µ —É–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —É –Ω–∞—Å —Å—Ç–æ–∏—Ç ‚Äò,');
                $length = explode(",", $mysql_array["length"]);
                $width = explode(",", $mysql_array["width"]);
                $height = explode(",", $mysql_array["height"]);
            } else {
                $ves[] = $mysql_array["weight"];
                $length[] = $mysql_array["length"];
                $width[] = $mysql_array["width"];
                $height[] = $mysql_array["height"]; //–µ—Å–ª–∏ —É –Ω–∞—Å –º–µ—Å—Ç–æ 1 —Ç–æ –º—ã –ø—Ä–æ—Å—Ç–æ –∑–∞–Ω–æ—Å–∏–º –≤ –º–∞—Å—Å–∏–≤
            }
            for ($s = 0; $s <= $mysql_array['mesto'] - 1; $s++) { //—Å–æ–∑–¥–∞–µ–º —Ü–∏–∫–ª –ø–æ–º–µ—â–∞–µ–º –≤ –º–∞—Å–∏–≤ parcel –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
                $arData['parcel'][] = array('weight' => $ves[$s], 'length' => $length[$s], 'width' => $width[$s], 'height' => $height[$s], 'quantity' => $cout[$i]);
            }
            $i++;
            $cena[] = $mysql_array['price']; // —É–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–Ω—É –∑–∞ —Ç–æ–≤–∞—Ä –∏–∑ –ë–î

        } while ($mysql_array = [] /* mysql_fetch_assoc($mysql_query) */); //–ø–æ–≤—Ç–æ—Ä—è–µ–º —Ç–µ–ª–æ —Ü–∏–∫–ª–∞

        for ($c = 0; $c <= count($cena); $c++) {
            $a = $a + ($cena[$c] * $cout[$c]);
        } //—Å—É–º–∏—Ä—É–µ–º —Ü–µ–Ω—É –∏ —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        $arData['declaredValue'] = $a; //–û–±—ä—è–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å (–∏—Ç–æ–≥–æ–≤–∞—è)
        $arRequest['request'] = $arData; // –ø–æ–º–µ—â–∞–µ–º –≤ –º–∞—Å—Å–∏–≤ –∑–∞–ø—Ä–æ—Å–∞ 
        $ret = $client->getServiceCostByParcels2($arRequest); //–¥–µ–ª–∞–µ–º —Å–∞–º –∑–∞–ø—Ä–æ—Å

        $echo = stdToArray($ret); // —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤ (–≤ 1 –ø—É–Ω–∫—Ç–µ –æ–Ω–∞ –µ—Å—Ç—å).
        $all = array();
        for ($j = 0; $j <= count($echo['return']) - 1; $j++) {
            $all[] = array('serviceName' => $echo['return'][$j]['serviceName'], 'cost' => $echo['return'][$j]['cost'], 'tarif' => $echo['return'][$j]['serviceCode']);
        } //–ø–æ–º–µ—â–∞–µ–º –≤ –º–∞—Å—Å–∏–≤ all ‚Äì —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞, –∫–æ–¥ —Ç–∞—Ä–∏—Ñ–∞, —Å—Ç–æ–∏–º–æ—Å—Ç—å.

        echo json_encode($all); // –≤—ã–≤–æ–¥–∏–º –¥–ª—è JS –≤ json —Ñ–æ—Ä–º–∞—Ç–µ.

    }
}
