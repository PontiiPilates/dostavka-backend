<?php

namespace Database\Seeders\Tk;

use App\Models\Tk\TerminalVozovoz;
use Carbon\Carbon;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Storage;

class TerminalVozovozSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // особенность данной тк в том, что нельзя получить сразу все терминалы
        // команда php artisan app:create-data-files-vozovoz обеспечивает сборку файлов данных из множества запросов
        // однако сами данные достаточно чистые и должны находиться выше прочих

        $this->terminals();
    }

    private function terminals()
    {
        $dataFiles = Storage::files('assets\geo\tk\vozovoz\data-files');

        foreach ($dataFiles as $dataFile) {

            $terminals = Storage::json($dataFile);

            $iterable = 0;
            $timeStart = Carbon::now();
            foreach ($terminals as $terminal) {

                $terminal = (object) $terminal;

                // типы, которые нужно добавлять в базу данных
                // другие типы не представляют ценности
                // здесь формат данных как в исходном файле
                $allowedTypes = [
                    "с", // село
                    "д", // деревня
                    "х", // хутор
                    "п", // посёлок
                    "ст-ца", // станица
                    "аг", // агрогородок
                    "сп.", // сельское поселение
                    "пгт", // посёлок городского типа
                    "рп", // рабочий поселок
                    "с.", // село
                    "высел", // высел
                    "с/п", // сельское поселение
                    "аул", // аул
                    "сл", // слобода
                    "ост-в", // остров
                    "п.", // посёлок
                    "пгт.", // посёлок городского типа
                    "дп", // дачный посёлок
                    "гп", // городской посёлок
                    "г", // город
                ];

                // если локации нет в списке доступных, то следующая итерация
                if (!in_array($terminal->type, $allowedTypes)) {
                    continue;
                }

                $territories = explode(',', $terminal->region_str);

                $region = null;
                $district = null;
                $city = null;
                $federal = false;
                foreach ($territories as $key => $territory) {

                    // если есть явное указание на территиорию федерального значения
                    if (str_contains($territory, 'значения')) {
                        $region = $terminal->name;
                        $federal = true;
                        break;
                    }

                    // если территория принадлежит субъекту
                    if (
                        str_contains($territory, 'край')
                        || str_contains($territory, 'округ')
                        || str_contains($territory, 'респ')
                        || str_contains($territory, 'Респ')
                        || str_contains($territory, 'обл')
                        || str_contains($territory, 'АО')
                    ) {
                        $region = trim($territories[$key]);
                        break;
                    }

                    // если территория принадлежит району
                    if (str_contains($territory, 'р-н')) {
                        $district = trim($territories[$key]);
                    }

                    // если у территории нет принадлежности к:
                    // - городу федерального значения
                    // - субъекту
                    // - району,
                    // но есть принадлежность к городу
                    if (str_contains($territory, ' г')) {

                        $badCities = [
                            ' Московский г',
                            ' Зеленоград г',
                            ' Павловск г',
                            ' Ноокат г',
                            ' Узген г',
                            'Нарын г',
                            'Ош г',
                        ];
                        if (!in_array($territory, $badCities)) {
                            $city = trim($territories[$key]);
                        }
                    }
                }

                // если не удалось обнаружить принадлежность к региону, но существует принадлежность к городу
                if ($city && !$region) {
                    $region = $city;
                }

                TerminalVozovoz::updateOrCreate(
                    [
                        'name' => $terminal->name,
                        'district' => $this->territoryReplacer($district),
                        'region' => $this->territoryReplacer($region),
                    ],
                    [
                        'identifier' => $terminal->guid,
                        'name' => $terminal->name,
                        'type' => $this->typesReplacer($terminal->type),
                        'district' => $this->territoryReplacer($district),
                        'region' => $this->territoryReplacer($region),
                        'federal' => $federal,
                        'country' => $terminal->country,
                    ]
                );

                $iterable++;
            }

            $timeEnd = Carbon::now();
            $executionTime = $timeStart->diffInSeconds($timeEnd);

            dump("Добавлено $iterable новых терминалов. $executionTime сек.");

            $this->check();
            break;
        }
    }

    private function check()
    {
        $whiteRegions = [
            'Липецкая область',
            'Республика Карелия',
            'Волгоградская область',
            'Кемеровская область',
            'Краснодарский край',
            'Красноярский край',
            'Курская область',
            'Республика Беларусь',
            'Оренбургская область',
            'Ростовская область',
            'Саратовская область',
            'Удмуртская Республика',
            'Воронежская область',
            'Иркутская область',
            'Самарская область',
            'Чувашская Республика - Чувашия',
            'Челябинская область',
            'Московская область',
            'Нижегородская область',
            'Тверская область',
            'Смоленская область',
            'Орловская область',
            'Архангельская область',
            'Ленинградская область',
            'Псковская область',
            'Омская область',
            'Республика Марий Эл',
            'Минская область',
            'Ярославская область',
            'Тюменская область',
            'Костромская область',
            'Вологодская область',
            'Республика Башкортостан',
            'Кировская область',
            'Калужская область',
            'Брянская область',
            'Рязанская область',
            'Владимирская область',
            'Республика Саха (Якутия)',
            'Чеченская Республика',
            'Республика Татарстан',
            'Ивановская область',
            'Ульяновская область',
            'Пермский край',
            'Новосибирская область',
            'Пензенская область',
            'Томская область',
            'Тульская область',
            'Республика Мордовия',
            'Белгородская область',
            'Алматинская область',
            'Запорожская область',
            'Карачаево-Черкесская Республика',
            'Алтайский край',
            'Свердловская область',
            'Тамбовская область',
            'Республика Дагестан',
            'Новгородская область',
            'Ставропольский край',
            'Республика Адыгея',
            'Приморский край',
            'Астраханская область',
            'Республика Алтай',
            'Республика Крым',
            'Кабардино-Балкарская Республика',
            'Курганская область',
            'Республика Бурятия',
            'Ханты-Мансийский автономный округ - Югра',
            'Москва',
            'Республика Хакасия',
            'Калининградская область',
            'Республика Калмыкия',
            'Амурская область',
            'Республика Коми',
            'Карагандинская область',
            'Республика Северная Осетия - Алания',
            'Хабаровский край',
            'Херсонская область',
            'Еврейская автономная область',
            'Мурманская область',
            'Севастополь',
            'Республика Ингушетия',
            'Луганская Народная Республика',
            'Камчатский край',
            'Донецкая Народная Республика',
            'Санкт-Петербург',
            'Ямало-Ненецкий автономный округ',
            'Чуйская область',
            'Сахалинская область',
            'Акмолинская область',
            'Забайкальский край',
            'Республика Грузия',
            'Котайкская область',
            'Сюникская область',
            'Республика Тыва',
            'Лорийская область',
            'Арагацотнская область',
            'Араратская область',
            'Ширакская область',
            'Байконур',
            'Тавушская область',
            'Армавирская область',
            'Вайоцдзорская область',
            'Гехаркуникская область',
            'Магаданская область',
            'Чукотский автономный округ',
            'Баткенская область',
            'Актюбинская область',
            'Алматы',
            'Астана',
            'Атырауская область',
            'Джалал-Абадская область',
            'Иссык-Кульская область',
            'Бишкек',
            'Ереван',
            'Кара-Суу',
            'Костанайская область',
            'Кызылординская область',
            '',
            'Павлодарская область',
            'Северо-Казахстанская область',
            'Восточно-Казахстанская область',
            'Таласская область',
            'Жамбылская область',
            'Западно-Казахстанская область',
            'Южно-Казахстанская область',
        ];

        $whiteTypes = [
            'деревня',
            'посёлок',
            'село',
            'хутор',
            'слобода',
            'станица',
            'сельское поселение',
            'рабочий посёлок',
            'высел',
            'пгт',
            'агрогородок',
            'аул',
            'дачный посёлок',
            'остров',
            'городской посёлок',
            'город',
        ];

        $regions = TerminalVozovoz::select('region')
            ->whereNotIn('region', $whiteRegions)
            ->groupBy('region')
            ->get()
            ->toArray();

        $types = TerminalVozovoz::select('type')
            ->whereNotIn('type', $whiteTypes)
            ->groupBy('type')
            ->get()
            ->toArray();

        dump("Обнаружено неожиданных регионов", $regions);
        dump("Обнаружено неожиданных типов", $types);
    }

    /**
     * Преобразует тип населенного пункта.
     * 
     * Исходные данные содержат различные и не очевидные сокращения.
     * В результате работы метода, все эти данные приводятся к стандарту.
     */
    private function typesReplacer($type)
    {
        // очистка строки
        $type = str_replace('.', '', $type);

        // замена всей строки
        $badTypes = [
            1 => "с",
            2 => "д",
            3 => "х",
            4 => "п",
            5 => "ст-ца",
            6 => "аг",
            7 => "сп",
            8 => "рп",
            9 => "дп",
            10 => "с/п",
            11 => "сл",
            12 => "ост-в",
            13 => "гп",
            14 => "г",
        ];

        $goodTypes = [
            1 => "село",
            2 => "деревня",
            3 => "хутор",
            4 => "посёлок",
            5 => "станица",
            6 => "агрогородок",
            7 => "сельское поселение",
            8 => "рабочий посёлок",
            9 => "дачный посёлок",
            10 => "сельское поселение",
            11 => "слобода",
            12 => "остров",
            13 => "городской посёлок",
            14 => "город",
        ];

        $key = array_search($type, $badTypes);
        if ($key >= 1) {
            $type = $goodTypes[$key];
        }

        return $type;
    }

    private function territoryReplacer($territory)
    {
        // замена вхождений строки
        $search = [
            1 => 'р-н',
            2 => 'обл',
            3 => 'Аобласть',
            4 => '.',
            5 => ' г'
        ];

        $replace = [
            1 => 'район',
            2 => 'область',
            3 => 'автономная область',
            4 => '',
            5 => ''
        ];

        $territory = str_replace($search, $replace, $territory);

        // замена всей строки
        $badTerritoryNames = [
            5 => "Адыгея Респ",
            6 => "Алтай Респ",
            7 => "Башкортостан Респ",
            8 => "Бурятия Респ",
            9 => "Дагестан Респ",
            1 => "Донецкая Народная респ",
            10 => "Ингушетия Респ",
            2 => "Кабардино-Балкарская Респ",
            11 => "Калмыкия Респ",
            3 => "Карачаево-Черкесская Респ",
            12 => "Карелия Респ",
            13 => "Коми Респ",
            14 => "Крым Респ",
            4 => "Луганская Народная респ",
            15 => "Марий Эл Респ",
            16 => "Мордовия Респ",
            17 => "Саха /Якутия/ Респ",
            18 => "Северная Осетия - Алания Респ",
            19 => "Татарстан Респ",
            20 => "Тыва Респ",
            22 => "Удмуртская Респ",
            21 => "Хакасия Респ",
            23 => "Чеченская Респ",
            24 => "Чувашская Республика Чувашия",
            25 => "Ямало-Ненецкий АО",
            26 => "Ненецкий АО",
            27 => "Ханты-Мансийский Автономный округ - Югра АО",
            28 => "Саха (Якутия) Респ",
            29 => "Чукотский АО",
            30 => "Донецк респ",
        ];

        $goodTerritoryNames = [
            1 => "Донецкая Народная Республика",
            2 => "Кабардино-Балкарская Республика",
            3 => "Карачаево-Черкесская Республика",
            4 => "Луганская Народная Республика",
            5 => "Республика Адыгея",
            6 => "Республика Алтай",
            7 => "Республика Башкортостан",
            8 => "Республика Бурятия",
            9 => "Республика Дагестан",
            10 => "Республика Ингушетия",
            11 => "Республика Калмыкия",
            12 => "Республика Карелия",
            13 => "Республика Коми",
            14 => "Республика Крым",
            15 => "Республика Марий Эл",
            16 => "Республика Мордовия",
            17 => "Республика Саха (Якутия)",
            18 => "Республика Северная Осетия - Алания",
            19 => "Республика Татарстан",
            20 => "Республика Тыва",
            21 => "Республика Хакасия",
            22 => "Удмуртская Республика",
            23 => "Чеченская Республика",
            24 => "Чувашская Республика - Чувашия",
            25 => "Ямало-Ненецкий автономный округ",
            26 => "Ямало-Ненецкий автономный округ",
            27 => "Ханты-Мансийский автономный округ - Югра",
            28 => "Республика Саха (Якутия)",
            29 => "Чукотский автономный округ",
            30 => "Донецкая Народная Республика",
        ];

        $key = array_search($territory, $badTerritoryNames);
        if ($key >= 1) {
            $territory = $goodTerritoryNames[$key];
        }

        return $territory;
    }
}
